{"version":3,"sources":["view/TrackToken/CoinTitle/CoinTitle.module.scss","view/TrackToken/Variation/Variation.module.scss","view/TrackToken/Price/Price.module.scss","view/TrackToken/Pool/Pool.module.scss","view/TrackToken/TrackToken.module.scss","service/notificationService.ts","service/tokenMappingService.ts","service/notificationMappingService.ts","view/TrackToken/CoinTitle/CoinTitle.tsx","view/TrackToken/Variation/Variation.tsx","view/TrackToken/Price/Price.tsx","view/TrackToken/Pool/Pool.tsx","view/TrackToken/TrackToken.tsx"],"names":["module","exports","pushBrowserNotification","browserNotifications","defaultIcon","forEach","browserNotification","Notification","title","icon","body","onclick","e","preventDefault","window","open","address","buildPoolColumn","token","_","isNil","targetPool","liquidity","tokenHelper","convertToInternationalCurrencySystem","dApp","DApp","PANCAKE","quoteSymbol","round","variationPrice","VARIATION_PERCENT_HIGHLIGHT","Math","abs","variationLiquidity","mappingVariationBrowserNotification","tokens","notifications","variationNotification","isPush","notification","buildTitleNotification","logoURI","buildBodyNotification","loser","LOSER_LEVEL_LIQUIDITY","A","LIQUIDITY","LOSER","B","C","push","chain","reverse","uniqBy","value","LOSER_LEVEL","getIconLevelLoser","burn","symbol","name","buildBurnPercent","roundCurrency","price","CoinTitle","props","state","isCopied","onCopyClipboard","bind","onOpenLinkInfo","copy","this","setState","setTimeout","web","coinTitle","className","style","button","onClick","logo","alt","src","logoBep20","href","target","rel","check","location","PureComponent","Variation","getStyle","getVariationText","variation","normal","manyUp","manyDown","division","wrap","Price","Pool","pool","TrackToken","stopRecursion","columnConfigs","cell","row","minWidth","filterText","createTheme","background","default","onChangeFilter","loadingService","showLoading","getTokenInfos","getPools","hideLoading","recursionUpdateTokenPrice","permission","requestPermission","toast","warn","prevProps","JSON","stringify","tokenNotifications","then","info","updateTokenPrice","Promise","r","CHUNK_DATA_DELAY","topMoverTokens","topDownMovers","slice","topUpMovers","sortTopMoverTokens","filter","toLowerCase","includes","fluid","xl","offset","size","InputText","filterInput","isShowClear","placeholder","onChange","columns","data","filterTokens","pagination","responsive","theme","customStyles","rows","minHeight","headCells","fontSize","fontWeight","cells","connect","sortBy","map","divisionPrice"],"mappings":"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","file":"static/js/8.96b1d299.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"CoinTitle_logo__2q4s1\",\"title\":\"CoinTitle_title__3dUR0\",\"button\":\"CoinTitle_button__3bVQB\",\"check\":\"CoinTitle_check__3TGFu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Variation_wrap__1hMZ9\",\"normal\":\"Variation_normal__3yV6W\",\"manyUp\":\"Variation_manyUp__2hvUV\",\"manyDown\":\"Variation_manyDown__JOz9A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Price_wrap__3dfaL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Pool_wrap__26XRm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"TrackToken_filterInput__12rAV\"};","import { toast } from 'react-toastify';\nimport { IBrowserNotification } from '../model/notificationModel';\nimport logoBep20 from '../asset/logo/bep20.png';\n\nexport function checkBrowserNotification() {\n  if (!('Notification' in window)) {\n    toast.warn('This browser does not support desktop notification!');\n\n    return;\n  }\n\n  if (Notification.permission !== 'granted') Notification.requestPermission();\n}\n\nexport function notifyVariationPrice(\n  browserNotifications: IBrowserNotification[]\n) {\n  if (!('Notification' in window)) {\n    browserNotifications.forEach(\n      (browserNotification: IBrowserNotification) => {\n        toast.info(`${browserNotification.title}`);\n      }\n    );\n  } else {\n    if (Notification.permission === 'granted') {\n      pushBrowserNotification(browserNotifications, logoBep20);\n    } else {\n      Notification.requestPermission().then((permission: string) => {\n        if (permission === 'granted') {\n          pushBrowserNotification(browserNotifications, logoBep20);\n        }\n      });\n    }\n  }\n}\n\nfunction pushBrowserNotification(\n  browserNotifications: IBrowserNotification[],\n  defaultIcon?: string\n) {\n  browserNotifications.forEach((browserNotification: IBrowserNotification) => {\n    const notification = new Notification(browserNotification.title, {\n      icon: browserNotification.icon || defaultIcon,\n      body: browserNotification.body,\n    });\n\n    notification.onclick = function (e) {\n      e.preventDefault();\n      window.open(\n        `https://poocoin.app/tokens/${browserNotification.address}`,\n        '_blank'\n      );\n    };\n  });\n}\n","import _ from 'lodash';\nimport { VARIATION_PERCENT_HIGHLIGHT } from '../config/appConfig';\nimport tokenHelper from '../helper/tokenHelper';\nimport { DApp, ITokenDetail, ITokenTable } from '../model/tokenModel';\n\nexport function mappingTokenTable(tokens: ITokenDetail[]): ITokenTable[] {\n  const mappedTokenTable: ITokenTable[] = _.chain(tokens)\n    .sortBy(['variationPrice'])\n    .map(\n      (token: ITokenDetail): ITokenTable => ({\n        coinTitle: `${\n          _.isNil(token.burn)\n            ? token.name\n            : '*[' +\n              tokenHelper.buildBurnPercent(token.burn) +\n              '] ' +\n              token.name\n        } (${token.symbol ? token.symbol : 'NA'})`,\n        pool: buildPoolColumn(token),\n        price: _.isNil(token.price)\n          ? 'NA'\n          : `${tokenHelper.roundCurrency(token.price)}`,\n        variation: token.variationPrice as number,\n        division: token.divisionPrice as number,\n        address: token.address,\n        logoURI: token.logoURI,\n        web: token.web,\n      })\n    )\n    .value();\n\n  return mappedTokenTable;\n}\n\nexport function sortTopMoverTokens(tokens: ITokenTable[]): ITokenTable[] {\n  const topDownMovers: ITokenTable[] = _.slice(tokens, 0, 5);\n  const topUpMovers: ITokenTable[] = _.slice(tokens, -5);\n  const topMoverTokens: ITokenTable[] = _.uniqBy(\n    [...topDownMovers, ...topUpMovers, ..._.slice(tokens, 5, -5)],\n    'address'\n  );\n\n  return topMoverTokens;\n}\n\nfunction buildPoolColumn(token: ITokenDetail): string {\n  return _.isNil(token.targetPool?.liquidity)\n    ? 'NA'\n    : `${tokenHelper.convertToInternationalCurrencySystem(\n        token.targetPool?.liquidity as number\n      )} (${\n        token.targetPool?.dApp === DApp.PANCAKE\n          ? ''\n          : token.targetPool?.dApp + ' | '\n      }${token.targetPool?.quoteSymbol})${\n        _.round(token.variationPrice as number, 2) <=\n        -VARIATION_PERCENT_HIGHLIGHT\n          ? '  ↓' +\n            tokenHelper.convertToInternationalCurrencySystem(\n              Math.abs(token.variationLiquidity as number)\n            )\n          : ''\n      }`;\n}\n","import _ from 'lodash';\nimport { LOSER_LEVEL, LOSER_LEVEL_LIQUIDITY } from '../config/appConfig';\nimport tokenHelper from '../helper/tokenHelper';\nimport { DApp, ITokenDetail } from '../model/tokenModel';\nimport { IBrowserNotification } from '../model/notificationModel';\n\nexport function mappingVariationBrowserNotification(\n  tokens: ITokenDetail[]\n): IBrowserNotification[] {\n  let notifications: IBrowserNotification[] = [];\n\n  tokens.forEach((token: ITokenDetail) => {\n    if (token.variationNotification?.isPush) {\n      const notification: IBrowserNotification = {\n        address: token.address,\n        title: buildTitleNotification(token),\n        icon: token.logoURI,\n        body: buildBodyNotification(token),\n      };\n      const liquidity: number = _.round(token.variationPrice as number, 2);\n      const loser: number = Math.abs(\n        _.round(token.variationPrice as number, 2)\n      );\n\n      if (\n        liquidity < LOSER_LEVEL_LIQUIDITY.A.LIQUIDITY &&\n        loser >= LOSER_LEVEL_LIQUIDITY.A.LOSER\n      ) {\n        notifications.push(notification);\n      } else if (\n        liquidity < LOSER_LEVEL_LIQUIDITY.B.LIQUIDITY &&\n        loser >= LOSER_LEVEL_LIQUIDITY.B.LOSER\n      ) {\n        notifications.push(notification);\n      } else if (\n        liquidity < LOSER_LEVEL_LIQUIDITY.C.LIQUIDITY &&\n        loser >= LOSER_LEVEL_LIQUIDITY.C.LOSER\n      ) {\n        notifications.push(notification);\n      } else {\n        notifications.push(notification);\n      }\n    }\n  });\n\n  notifications = _.chain(notifications).reverse().uniqBy('address').value();\n\n  return notifications;\n}\n\nfunction buildTitleNotification(token: ITokenDetail): string {\n  const icon: string = getIconLevelLoser(\n    Math.abs(_.round(token.variationPrice as number, 2))\n  );\n\n  return `${icon} ${\n    _.isNil(token.burn)\n      ? token.symbol || token.name\n      : '*[' +\n        tokenHelper.buildBurnPercent(token.burn) +\n        '] ' +\n        (token.symbol || token.name)\n  } ${_.round(token.variationPrice as number, 2)}%`;\n}\n\nfunction getIconLevelLoser(loser: number): string {\n  if (loser > LOSER_LEVEL.C) {\n    return '🍇';\n  }\n  if (loser > LOSER_LEVEL.B) {\n    return '🍊';\n  }\n  if (loser > LOSER_LEVEL.A) {\n    return '🍏';\n  }\n\n  return '💹';\n}\n\nfunction buildBodyNotification(token: ITokenDetail): string {\n  return `💵 $${tokenHelper.roundCurrency(\n    token.price as number\n  )}\\n👉 ${tokenHelper.convertToInternationalCurrencySystem(\n    token.targetPool?.liquidity as number\n  )} (${\n    token.targetPool?.dApp === DApp.PANCAKE\n      ? ''\n      : token.targetPool?.dApp + ' | '\n  }${\n    token.targetPool?.quoteSymbol\n  })  -${tokenHelper.convertToInternationalCurrencySystem(\n    Math.abs(token.variationLiquidity as number)\n  )}💰`;\n}\n\nexport function mappingVariationBrowserNotificationFomo(\n  tokens: ITokenDetail[]\n): IBrowserNotification[] {\n  let notifications: IBrowserNotification[] = [];\n\n  tokens.forEach((token: ITokenDetail) => {\n    if (token.variationNotificationFomo?.isPush) {\n      const notification: IBrowserNotification = {\n        address: token.address,\n        title: `${\n          _.isNil(token.burn)\n            ? token.symbol || token.name\n            : '*[' +\n              tokenHelper.buildBurnPercent(token.burn) +\n              '] ' +\n              (token.symbol || token.name)\n        } +${_.round(token.variationPrice as number, 2)}%`,\n        icon: token.logoURI,\n        body: `$${tokenHelper.roundCurrency(\n          token.price as number\n        )} | ${tokenHelper.convertToInternationalCurrencySystem(\n          token.targetPool?.liquidity as number\n        )} (${token.targetPool?.dApp} | ${token.targetPool?.quoteSymbol})`,\n      };\n\n      notifications.push(notification);\n    }\n  });\n\n  return notifications;\n}\n","import { PureComponent, ReactElement, Fragment } from 'react';\nimport copy from 'copy-to-clipboard';\nimport logoBep20 from '../../../asset/logo/bep20.png';\nimport style from './CoinTitle.module.scss';\n\ninterface IStoreProps {}\ninterface IHOCProps {}\ninterface IOwnProps {\n  coinTitle: string;\n  address: string;\n  logoURI?: string;\n  web?: string;\n}\ninterface IOwnState {\n  isCopied: boolean;\n}\n\nclass CoinTitle extends PureComponent<\n  IOwnProps & IHOCProps & IStoreProps,\n  IOwnState\n> {\n  state: IOwnState;\n\n  constructor(props: IOwnProps & IHOCProps & IStoreProps) {\n    super(props);\n\n    this.state = {\n      isCopied: false,\n    };\n\n    this.onCopyClipboard = this.onCopyClipboard.bind(this);\n    this.onOpenLinkInfo = this.onOpenLinkInfo.bind(this);\n  }\n\n  private onCopyClipboard(address: string) {\n    copy(address);\n\n    this.setState({ isCopied: true });\n\n    setTimeout(() => {\n      this.setState({ isCopied: false });\n    }, 2000);\n  }\n\n  private onOpenLinkInfo() {\n    const { address, web } = this.props;\n\n    window.open(`https://tokensniffer.com/token/${address}`);\n    if (web) {\n      window.open(web);\n    } else {\n      window.open(`https://www.coingecko.com/en/coins/${address}`);\n    }\n  }\n\n  render(): ReactElement {\n    const { coinTitle, address, logoURI } = this.props;\n    const { isCopied } = this.state;\n\n    return (\n      <Fragment>\n        <button\n          className={style.button}\n          title='Check info'\n          onClick={this.onOpenLinkInfo}\n        >\n          <img\n            className={style.logo}\n            alt={''}\n            src={logoURI || logoBep20}\n          />\n        </button>\n\n        <a\n          className={style.title}\n          href={`https://poocoin.app/tokens/${address}`}\n          target='_blank'\n          rel='noopener noreferrer'\n          title={'Link to poocoin'}\n        >\n          {coinTitle}\n        </a>\n        {isCopied ? (\n          <button className={`${style.button} ${style.check}`} title='Copied!'>\n            <i className='bi bi-check2'></i>\n          </button>\n        ) : (\n          <button\n            className={style.button}\n            title='Copy contract to clipboard'\n            onClick={() => this.onCopyClipboard(address)}\n          >\n            <i className='bi bi-clipboard'></i>\n          </button>\n        )}\n        <a\n          href={`${window.location.href}#/swap/${address}`}\n          target='_blank'\n          rel='noopener noreferrer'\n          title={'Flast Swap'}\n        >\n          <button className={style.button}>\n            <i className='bi bi-currency-exchange'></i>\n          </button>\n        </a>\n      </Fragment>\n    );\n  }\n}\n\nexport default CoinTitle;\n","import { PureComponent, ReactElement } from 'react';\nimport _ from 'lodash';\nimport { VARIATION_PERCENT_HIGHLIGHT } from '../../../config/appConfig';\nimport style from './Variation.module.scss';\n\ninterface IStoreProps {}\ninterface IHOCProps {}\ninterface IOwnProps {\n  variation: number;\n  division: number;\n}\ninterface IOwnState {}\n\nclass Variation extends PureComponent<\n  IOwnProps & IHOCProps & IStoreProps,\n  IOwnState\n> {\n  constructor(props: IOwnProps & IHOCProps & IStoreProps) {\n    super(props);\n\n    this.getStyle = this.getStyle.bind(this);\n    this.getVariationText = this.getVariationText.bind(this);\n  }\n\n  private getStyle(): string {\n    if (_.isNil(this.props.variation)) return style.normal;\n\n    const variation = _.round(this.props.variation, 2);\n\n    if (\n      variation > -VARIATION_PERCENT_HIGHLIGHT &&\n      variation < VARIATION_PERCENT_HIGHLIGHT\n    ) {\n      return style.normal;\n    } else if (variation >= VARIATION_PERCENT_HIGHLIGHT) {\n      return style.manyUp;\n    } else {\n      return style.manyDown;\n    }\n  }\n\n  private getVariationText(): string {\n    if (_.isNil(this.props.variation)) return 'NA';\n\n    const variation = _.round(this.props.variation, 2);\n    const division = _.round(this.props.division, 1);\n    let variationText: string;\n\n    if (variation === 0) {\n      variationText = variation + '%';\n    } else if (variation > 0) {\n      variationText = '+' + variation + '%';\n    } else {\n      variationText =\n        variation +\n        '%' +\n        (variation <= -VARIATION_PERCENT_HIGHLIGHT ? `  ↓${division}` : '');\n    }\n\n    return variationText;\n  }\n\n  render(): ReactElement {\n    return (\n      <span className={style.wrap + ' ' + this.getStyle()}>\n        {this.getVariationText()}\n      </span>\n    );\n  }\n}\n\nexport default Variation;\n","import style from './Price.module.scss';\n\nexport default function Price(props: { price: string }) {\n  return <span className={style.wrap}>{props.price}</span>;\n}\n","import style from './Pool.module.scss';\n\nexport default function Pool(props: { pool: string }) {\n  return <span className={style.wrap}>{props.pool}</span>;\n}\n","import { PureComponent, ReactElement } from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col } from 'reactstrap';\nimport DataTable, { createTheme } from 'react-data-table-component';\nimport { CHUNK_DATA_DELAY } from '../../config/appConfig';\nimport { TStoreState } from '../../store/config/store';\nimport loadingService from '../../service/loadingService';\nimport { getTokenInfos } from '../../service/tokenInfoService';\nimport { getPools } from '../../service/tokenPoolService';\nimport { updateTokenPrice } from '../../service/tokenPriceService';\nimport { checkBrowserNotification } from '../../service/notificationService';\nimport { notifyVariationPrice } from '../../service/notificationService';\nimport {\n  mappingTokenTable,\n  sortTopMoverTokens,\n} from '../../service/tokenMappingService';\nimport {\n  mappingVariationBrowserNotification,\n  // mappingVariationBrowserNotificationFomo,\n} from '../../service/notificationMappingService';\nimport { ITokenTable } from '../../model/tokenModel';\nimport { IBrowserNotification } from '../../model/notificationModel';\nimport InputText from '../controls/InputText/InputText';\nimport CoinTitle from './CoinTitle/CoinTitle';\nimport Variation from './Variation/Variation';\nimport Price from './Price/Price';\nimport Pool from './Pool/Pool';\nimport style from './TrackToken.module.scss';\n\ninterface IStoreProps {\n  tokens: ITokenTable[];\n  tokenNotifications: IBrowserNotification[];\n  // tokenNotificationsFomo: IBrowserNotification[];\n}\ninterface IHOCProps {}\ninterface IOwnProps {}\ninterface IOwnState {\n  filterText: string;\n}\n\nclass TrackToken extends PureComponent<\n  IOwnProps & IHOCProps & IStoreProps,\n  IOwnState\n> {\n  state: IOwnState;\n\n  private stopRecursion = false;\n  private columnConfigs = [\n    {\n      name: 'Coin',\n      cell: (row: ITokenTable): ReactElement => {\n        return (\n          <CoinTitle\n            coinTitle={row.coinTitle}\n            address={row.address}\n            logoURI={row.logoURI}\n            web={row.web}\n          />\n        );\n      },\n      minWidth: '400px',\n    },\n    {\n      name: 'Variation',\n      cell: (row: ITokenTable): ReactElement => {\n        return <Variation variation={row.variation} division={row.division} />;\n      },\n      minWidth: '80px',\n    },\n    {\n      name: 'Price',\n      cell: (row: ITokenTable): ReactElement => {\n        return <Price price={row.price} />;\n      },\n      minWidth: '100px',\n    },\n    {\n      name: 'Pool',\n      // selector: (row: ITokenTable): string => row.pool,\n      cell: (row: ITokenTable): ReactElement => {\n        return <Pool pool={row.pool} />;\n      },\n      minWidth: '120px',\n    },\n  ];\n\n  constructor(props: IOwnProps & IHOCProps & IStoreProps) {\n    super(props);\n\n    this.state = {\n      filterText: '',\n    };\n\n    createTheme('dark', {\n      background: {\n        default: 'transparent',\n      },\n    });\n\n    this.onChangeFilter = this.onChangeFilter.bind(this);\n  }\n\n  async componentDidMount() {\n    loadingService.showLoading();\n    await getTokenInfos();\n    await getPools();\n    loadingService.hideLoading();\n\n    this.recursionUpdateTokenPrice();\n\n    checkBrowserNotification();\n  }\n\n  componentDidUpdate(prevProps: IStoreProps) {\n    if (\n      JSON.stringify(this.props.tokenNotifications) !==\n      JSON.stringify(prevProps.tokenNotifications)\n    ) {\n      notifyVariationPrice(this.props.tokenNotifications);\n    }\n\n    // if (\n    //   JSON.stringify(this.props.tokenNotificationsFomo) !==\n    //   JSON.stringify(prevProps.tokenNotificationsFomo)\n    // ) {\n    //   notifyVariationPrice(this.props.tokenNotificationsFomo);\n    // }\n  }\n\n  componentWillUnmount() {\n    this.stopRecursion = true;\n  }\n\n  private async recursionUpdateTokenPrice() {\n    if (this.stopRecursion) {\n      return;\n    }\n\n    await updateTokenPrice();\n    await new Promise((r) => setTimeout(r, CHUNK_DATA_DELAY));\n    await this.recursionUpdateTokenPrice();\n  }\n\n  private onChangeFilter(filterText: string) {\n    this.setState({ filterText });\n  }\n\n  private filterTokens(tokens: ITokenTable[]): ITokenTable[] {\n    const { filterText } = this.state;\n\n    if (!filterText) {\n      const topMoverTokens: ITokenTable[] = sortTopMoverTokens(tokens);\n\n      return topMoverTokens;\n    }\n\n    const filteredTokens: ITokenTable[] = tokens.filter(\n      (token: ITokenTable): boolean => {\n        return (\n          token.coinTitle.toLowerCase().includes(filterText.toLowerCase()) ||\n          token.address.toLowerCase() === filterText.toLowerCase()\n        );\n      }\n    );\n\n    return filteredTokens;\n  }\n\n  render(): ReactElement {\n    const { filterText } = this.state;\n    return (\n      <Container fluid='xl' className='py-2 py-lg-3 py-xl-5'>\n        <Row>\n          <Col\n            xl={{\n              offset: 1,\n              size: 10,\n            }}\n          >\n            <div className='fk-container px-2 px-lg-4 px-xl-5 pt-2 pt-lg-4 pt-xl-5 pb-xl-4'>\n              <div className='mb-1'>\n                <InputText\n                  className={'fk-input-lg ' + style.filterInput}\n                  isShowClear={true}\n                  placeholder={'Enter token name / address...'}\n                  value={filterText}\n                  onChange={this.onChangeFilter}\n                />\n              </div>\n              <DataTable\n                columns={this.columnConfigs}\n                data={this.filterTokens(this.props.tokens)}\n                pagination\n                responsive\n                theme={'dark'}\n                customStyles={{\n                  rows: {\n                    style: {\n                      minHeight: '52px',\n                    },\n                  },\n                  headCells: {\n                    style: {\n                      fontSize: '16px',\n                      fontWeight: '700',\n                    },\n                  },\n                  cells: {\n                    style: {\n                      fontSize: '14px',\n                      fontWeight: '500',\n                    },\n                  },\n                  pagination: {\n                    style: {\n                      fontSize: '14px',\n                      fontWeight: '500',\n                    },\n                  },\n                }}\n              />\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nconst mapState = (state: TStoreState): IStoreProps => ({\n  tokens: mappingTokenTable(state.tokens),\n  tokenNotifications: mappingVariationBrowserNotification(state.tokens),\n  // tokenNotificationsFomo: mappingVariationBrowserNotificationFomo(state.tokens),\n});\n\nexport default connect(mapState)(TrackToken);\n"],"sourceRoot":""}