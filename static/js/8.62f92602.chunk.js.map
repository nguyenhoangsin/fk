{"version":3,"sources":["view/TokenTable/CoinTitle/CoinTitle.module.scss","view/TokenTable/Variation/Variation.module.scss","view/TokenTable/Price/Price.module.scss","view/TokenTable/Pool/Pool.module.scss","view/TokenTable/TokenTable.module.scss","service/notificationService.ts","service/tokenMappingService.ts","service/notificationMappingService.ts","view/TokenTable/CoinTitle/CoinTitle.tsx","view/TokenTable/Variation/Variation.tsx","view/TokenTable/Price/Price.tsx","view/TokenTable/Pool/Pool.tsx","view/TokenTable/TokenTable.tsx"],"names":["module","exports","pushBrowserNotification","browserNotifications","defaultIcon","forEach","browserNotification","Notification","title","icon","body","onclick","e","preventDefault","window","open","address","buildPoolColumn","token","_","isNil","targetPool","liquidity","tokenHelper","convertToInternationalCurrencySystem","dApp","DApp","PANCAKE","quoteSymbol","round","variationPrice","VARIATION_PERCENT_HIGHLIGHT","Math","abs","variationLiquidity","mappingVariationBrowserNotification","tokens","notifications","variationNotification","isPush","notification","buildTitleNotification","logoURI","buildBodyNotification","push","chain","reverse","uniqBy","value","burn","symbol","name","buildBurnPercent","divisionPrice","roundCurrency","price","CoinTitle","props","state","isCopied","onClickCopyClipboard","bind","copy","this","setState","setTimeout","coinTitle","web","className","style","logo","alt","src","logoBep20","href","target","rel","button","check","onClick","PureComponent","Variation","getStyle","getVariationText","variation","normal","manyUp","manyDown","division","wrap","Price","Pool","pool","TokenTable","stopRecursion","columnConfigs","cell","row","minWidth","filterText","createTheme","background","default","onChangeFilter","a","loadingService","showLoading","getTokenInfos","getPools","hideLoading","recursionUpdateTokenPrice","permission","requestPermission","toast","warn","prevProps","JSON","stringify","tokenNotifications","then","info","updateTokenPrice","Promise","r","CHUNK_DATA_DELAY","topMoverTokens","topDownMovers","slice","topUpMovers","sortTopMoverTokens","filter","toLowerCase","includes","fluid","xl","offset","size","InputText","filterInput","isShowClear","placeholder","onChange","columns","data","filterTokens","pagination","responsive","theme","customStyles","rows","minHeight","headCells","fontSize","fontWeight","cells","connect","sortBy","map"],"mappings":"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","file":"static/js/8.62f92602.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"CoinTitle_logo__2DpXk\",\"title\":\"CoinTitle_title__pPd7J\",\"button\":\"CoinTitle_button__3_FZX\",\"check\":\"CoinTitle_check__VXOSx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Variation_wrap__1nxwR\",\"normal\":\"Variation_normal__2qN6O\",\"manyUp\":\"Variation_manyUp__1v02P\",\"manyDown\":\"Variation_manyDown__2v9P-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Price_wrap__BEA8b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Pool_wrap__pU8tF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"TokenTable_filterInput__2gjpV\"};","import { toast } from 'react-toastify';\nimport { IBrowserNotification } from '../model/notificationModel';\nimport logoBep20 from '../asset/logo/bep20.png';\n\nexport function checkBrowserNotification() {\n  if (!('Notification' in window)) {\n    toast.warn('This browser does not support desktop notification!');\n\n    return;\n  }\n\n  if (Notification.permission !== 'granted') Notification.requestPermission();\n}\n\nexport function notifyVariationPrice(\n  browserNotifications: IBrowserNotification[]\n) {\n  if (!('Notification' in window)) {\n    browserNotifications.forEach(\n      (browserNotification: IBrowserNotification) => {\n        toast.info(`${browserNotification.title}`);\n      }\n    );\n  } else {\n    if (Notification.permission === 'granted') {\n      pushBrowserNotification(browserNotifications, logoBep20);\n    } else {\n      Notification.requestPermission().then((permission: string) => {\n        if (permission === 'granted') {\n          pushBrowserNotification(browserNotifications, logoBep20);\n        }\n      });\n    }\n  }\n}\n\nfunction pushBrowserNotification(\n  browserNotifications: IBrowserNotification[],\n  defaultIcon?: string\n) {\n  browserNotifications.forEach((browserNotification: IBrowserNotification) => {\n    const notification = new Notification(browserNotification.title, {\n      icon: browserNotification.icon || defaultIcon,\n      body: browserNotification.body,\n    });\n\n    notification.onclick = function (e) {\n      e.preventDefault();\n      window.open(\n        `https://poocoin.app/tokens/${browserNotification.address}`,\n        '_blank'\n      );\n    };\n  });\n}\n","import _ from 'lodash';\nimport { VARIATION_PERCENT_HIGHLIGHT } from '../config/appConfig';\nimport tokenHelper from '../helper/tokenHelper';\nimport { DApp, ITokenDetail, ITokenTable } from '../model/tokenModel';\n\nexport function mappingTokenTable(tokens: ITokenDetail[]): ITokenTable[] {\n  const mappedTokenTable: ITokenTable[] = _.chain(tokens)\n    .sortBy(['variationPrice'])\n    .map(\n      (token: ITokenDetail): ITokenTable => ({\n        coinTitle: `${\n          _.isNil(token.burn)\n            ? token.name\n            : '*[' +\n              tokenHelper.buildBurnPercent(token.burn) +\n              '] ' +\n              token.name\n        } (${token.symbol ? token.symbol : 'NA'})`,\n        pool: buildPoolColumn(token),\n        price: _.isNil(token.price)\n          ? 'NA'\n          : `${tokenHelper.roundCurrency(token.price)}`,\n        variation: token.variationPrice as number,\n        division: token.divisionPrice as number,\n        address: token.address,\n        logoURI: token.logoURI,\n        web: token.web,\n      })\n    )\n    .value();\n\n  return mappedTokenTable;\n}\n\nexport function sortTopMoverTokens(tokens: ITokenTable[]): ITokenTable[] {\n  const topDownMovers: ITokenTable[] = _.slice(tokens, 0, 5);\n  const topUpMovers: ITokenTable[] = _.slice(tokens, -5);\n  const topMoverTokens: ITokenTable[] = _.uniqBy(\n    [...topDownMovers, ...topUpMovers, ..._.slice(tokens, 5, -5)],\n    'address'\n  );\n\n  return topMoverTokens;\n}\n\nfunction buildPoolColumn(token: ITokenDetail): string {\n  return _.isNil(token.targetPool?.liquidity)\n    ? 'NA'\n    : `${tokenHelper.convertToInternationalCurrencySystem(\n        token.targetPool?.liquidity as number\n      )} (${\n        token.targetPool?.dApp === DApp.PANCAKE\n          ? ''\n          : token.targetPool?.dApp + ' | '\n      }${token.targetPool?.quoteSymbol})${\n        _.round(token.variationPrice as number, 2) <=\n        -VARIATION_PERCENT_HIGHLIGHT\n          ? '  ↓' +\n            tokenHelper.convertToInternationalCurrencySystem(\n              Math.abs(token.variationLiquidity as number)\n            )\n          : ''\n      }`;\n}\n","import _ from 'lodash';\nimport tokenHelper from '../helper/tokenHelper';\nimport { DApp, ITokenDetail } from '../model/tokenModel';\nimport { IBrowserNotification } from '../model/notificationModel';\n\nexport function mappingVariationBrowserNotification(\n  tokens: ITokenDetail[]\n): IBrowserNotification[] {\n  let notifications: IBrowserNotification[] = [];\n\n  tokens.forEach((token: ITokenDetail) => {\n    if (token.variationNotification?.isPush) {\n      const notification: IBrowserNotification = {\n        address: token.address,\n        title: buildTitleNotification(token),\n        icon: token.logoURI,\n        body: buildBodyNotification(token),\n      };\n\n      notifications.push(notification);\n    }\n  });\n\n  notifications = _.chain(notifications).reverse().uniqBy('address').value();\n\n  return notifications;\n}\n\nfunction buildTitleNotification(token: ITokenDetail): string {\n  return `${\n    _.isNil(token.burn)\n      ? token.symbol || token.name\n      : '*[' +\n        tokenHelper.buildBurnPercent(token.burn) +\n        '] ' +\n        (token.symbol || token.name)\n  } ${_.round(token.variationPrice as number, 2)}%  ↓${_.round(\n    token.divisionPrice as number,\n    1\n  )}`;\n}\n\nfunction buildBodyNotification(token: ITokenDetail): string {\n  return `Price: $${tokenHelper.roundCurrency(\n    token.price as number\n  )}\\nLP: ${tokenHelper.convertToInternationalCurrencySystem(\n    token.targetPool?.liquidity as number\n  )} (${\n    token.targetPool?.dApp === DApp.PANCAKE\n      ? ''\n      : token.targetPool?.dApp + ' | '\n  }${\n    token.targetPool?.quoteSymbol\n  })  ↓${tokenHelper.convertToInternationalCurrencySystem(\n    Math.abs(token.variationLiquidity as number)\n  )}`;\n}\n\nexport function mappingVariationBrowserNotificationFomo(\n  tokens: ITokenDetail[]\n): IBrowserNotification[] {\n  let notifications: IBrowserNotification[] = [];\n\n  tokens.forEach((token: ITokenDetail) => {\n    if (token.variationNotificationFomo?.isPush) {\n      const notification: IBrowserNotification = {\n        address: token.address,\n        title: `${\n          _.isNil(token.burn)\n            ? token.symbol || token.name\n            : '*[' +\n              tokenHelper.buildBurnPercent(token.burn) +\n              '] ' +\n              (token.symbol || token.name)\n        } +${_.round(token.variationPrice as number, 2)}%`,\n        icon: token.logoURI,\n        body: `$${tokenHelper.roundCurrency(\n          token.price as number\n        )} | ${tokenHelper.convertToInternationalCurrencySystem(\n          token.targetPool?.liquidity as number\n        )} (${token.targetPool?.dApp} | ${token.targetPool?.quoteSymbol})`,\n      };\n\n      notifications.push(notification);\n    }\n  });\n\n  return notifications;\n}\n","import { PureComponent, ReactElement, Fragment } from 'react';\nimport copy from 'copy-to-clipboard';\nimport logoBep20 from '../../../asset/logo/bep20.png';\nimport style from './CoinTitle.module.scss';\n\ninterface IStoreProps {}\ninterface IHOCProps {}\ninterface IOwnProps {\n  coinTitle: string;\n  address: string;\n  logoURI?: string;\n  web?: string;\n}\ninterface IOwnState {\n  isCopied: boolean;\n}\n\nclass CoinTitle extends PureComponent<\n  IOwnProps & IHOCProps & IStoreProps,\n  IOwnState\n> {\n  state: IOwnState;\n\n  constructor(props: IOwnProps & IHOCProps & IStoreProps) {\n    super(props);\n\n    this.state = {\n      isCopied: false,\n    };\n\n    this.onClickCopyClipboard = this.onClickCopyClipboard.bind(this);\n  }\n\n  private onClickCopyClipboard(address: string) {\n    copy(address);\n\n    this.setState({ isCopied: true });\n\n    setTimeout(() => {\n      this.setState({ isCopied: false });\n    }, 2000);\n  }\n\n  render(): ReactElement {\n    const { coinTitle, address, logoURI, web } = this.props;\n    const { isCopied } = this.state;\n\n    return (\n      <Fragment>\n        <img\n          className={style.logo}\n          alt={coinTitle}\n          src={logoURI || logoBep20}\n          title={address}\n        />\n        <a\n          className={style.title}\n          href={`https://poocoin.app/tokens/${address}`}\n          target='_blank'\n          rel='noopener noreferrer'\n          title={'Link to poocoin'}\n        >\n          {coinTitle}\n        </a>\n        {isCopied ? (\n          <button className={`${style.button} ${style.check}`} title='Copied!'>\n            <i className='bi bi-check2'></i>\n          </button>\n        ) : (\n          <button\n            className={style.button}\n            title='Copy contract to clipboard'\n            onClick={() => this.onClickCopyClipboard(address)}\n          >\n            <i className='bi bi-clipboard'></i>\n          </button>\n        )}\n        <a\n          href={`https://tokensniffer.com/token/${address}`}\n          target='_blank'\n          rel='noopener noreferrer'\n          title={'Check tokensniffer'}\n        >\n          <button className={style.button}>\n            <i className='bi bi-lightning-charge'></i>\n          </button>\n        </a>\n        {!!web ? (\n          <a\n            href={web}\n            target='_blank'\n            rel='noopener noreferrer'\n            title={'Check coinmarketcap'}\n          >\n            <button className={style.button}>\n              <i className='bi bi-info-lg'></i>\n            </button>\n          </a>\n        ) : (\n          ''\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport default CoinTitle;\n","import { PureComponent, ReactElement } from 'react';\nimport _ from 'lodash';\nimport { VARIATION_PERCENT_HIGHLIGHT } from '../../../config/appConfig';\nimport style from './Variation.module.scss';\n\ninterface IStoreProps {}\ninterface IHOCProps {}\ninterface IOwnProps {\n  variation: number;\n  division: number;\n}\ninterface IOwnState {}\n\nclass Variation extends PureComponent<\n  IOwnProps & IHOCProps & IStoreProps,\n  IOwnState\n> {\n  constructor(props: IOwnProps & IHOCProps & IStoreProps) {\n    super(props);\n\n    this.getStyle = this.getStyle.bind(this);\n    this.getVariationText = this.getVariationText.bind(this);\n  }\n\n  private getStyle(): string {\n    if (_.isNil(this.props.variation)) return style.normal;\n\n    const variation = _.round(this.props.variation, 2);\n\n    if (\n      variation > -VARIATION_PERCENT_HIGHLIGHT &&\n      variation < VARIATION_PERCENT_HIGHLIGHT\n    ) {\n      return style.normal;\n    } else if (variation >= VARIATION_PERCENT_HIGHLIGHT) {\n      return style.manyUp;\n    } else {\n      return style.manyDown;\n    }\n  }\n\n  private getVariationText(): string {\n    if (_.isNil(this.props.variation)) return 'NA';\n\n    const variation = _.round(this.props.variation, 2);\n    const division = _.round(this.props.division, 1);\n    let variationText: string;\n\n    if (variation === 0) {\n      variationText = variation + '%';\n    } else if (variation > 0) {\n      variationText = '+' + variation + '%';\n    } else {\n      variationText =\n        variation +\n        '%' +\n        (variation <= -VARIATION_PERCENT_HIGHLIGHT ? `  ↓${division}` : '');\n    }\n\n    return variationText;\n  }\n\n  render(): ReactElement {\n    return (\n      <span className={style.wrap + ' ' + this.getStyle()}>\n        {this.getVariationText()}\n      </span>\n    );\n  }\n}\n\nexport default Variation;\n","import style from './Price.module.scss';\n\nexport default function Price(props: { price: string }) {\n  return <span className={style.wrap}>{props.price}</span>;\n}\n","import style from './Pool.module.scss';\n\nexport default function Pool(props: { pool: string }) {\n  return <span className={style.wrap}>{props.pool}</span>;\n}\n","import { PureComponent, ReactElement } from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col } from 'reactstrap';\nimport DataTable, { createTheme } from 'react-data-table-component';\nimport { CHUNK_DATA_DELAY } from '../../config/appConfig';\nimport { TStoreState } from '../../store/config/store';\nimport loadingService from '../../service/loadingService';\nimport { getTokenInfos } from '../../service/tokenInfoService';\nimport { getPools } from '../../service/tokenPoolService';\nimport { updateTokenPrice } from '../../service/tokenPriceService';\nimport { checkBrowserNotification } from '../../service/notificationService';\nimport { notifyVariationPrice } from '../../service/notificationService';\nimport {\n  mappingTokenTable,\n  sortTopMoverTokens,\n} from '../../service/tokenMappingService';\nimport {\n  mappingVariationBrowserNotification,\n  // mappingVariationBrowserNotificationFomo,\n} from '../../service/notificationMappingService';\nimport { ITokenTable } from '../../model/tokenModel';\nimport { IBrowserNotification } from '../../model/notificationModel';\nimport InputText from '../controls/InputText/InputText';\nimport CoinTitle from './CoinTitle/CoinTitle';\nimport Variation from './Variation/Variation';\nimport Price from './Price/Price';\nimport Pool from './Pool/Pool';\nimport style from './TokenTable.module.scss';\n\ninterface IStoreProps {\n  tokens: ITokenTable[];\n  tokenNotifications: IBrowserNotification[];\n  // tokenNotificationsFomo: IBrowserNotification[];\n}\ninterface IHOCProps {}\ninterface IOwnProps {}\ninterface IOwnState {\n  filterText: string;\n}\n\nclass TokenTable extends PureComponent<\n  IOwnProps & IHOCProps & IStoreProps,\n  IOwnState\n> {\n  state: IOwnState;\n\n  private stopRecursion = false;\n  private columnConfigs = [\n    {\n      name: 'Coin',\n      cell: (row: ITokenTable): ReactElement => {\n        return (\n          <CoinTitle\n            coinTitle={row.coinTitle}\n            address={row.address}\n            logoURI={row.logoURI}\n            web={row.web}\n          />\n        );\n      },\n      minWidth: '400px',\n    },\n    {\n      name: 'Variation',\n      cell: (row: ITokenTable): ReactElement => {\n        return <Variation variation={row.variation} division={row.division} />;\n      },\n      minWidth: '80px',\n    },\n    {\n      name: 'Price',\n      cell: (row: ITokenTable): ReactElement => {\n        return <Price price={row.price} />;\n      },\n      minWidth: '100px',\n    },\n    {\n      name: 'Pool',\n      // selector: (row: ITokenTable): string => row.pool,\n      cell: (row: ITokenTable): ReactElement => {\n        return <Pool pool={row.pool} />;\n      },\n      minWidth: '120px',\n    },\n  ];\n\n  constructor(props: IOwnProps & IHOCProps & IStoreProps) {\n    super(props);\n\n    this.state = {\n      filterText: '',\n    };\n\n    createTheme('dark', {\n      background: {\n        default: 'transparent',\n      },\n    });\n\n    this.onChangeFilter = this.onChangeFilter.bind(this);\n  }\n\n  async componentDidMount() {\n    loadingService.showLoading();\n    await getTokenInfos();\n    await getPools();\n    loadingService.hideLoading();\n\n    this.recursionUpdateTokenPrice();\n\n    checkBrowserNotification();\n  }\n\n  componentDidUpdate(prevProps: IStoreProps) {\n    if (\n      JSON.stringify(this.props.tokenNotifications) !==\n      JSON.stringify(prevProps.tokenNotifications)\n    ) {\n      notifyVariationPrice(this.props.tokenNotifications);\n    }\n\n    // if (\n    //   JSON.stringify(this.props.tokenNotificationsFomo) !==\n    //   JSON.stringify(prevProps.tokenNotificationsFomo)\n    // ) {\n    //   notifyVariationPrice(this.props.tokenNotificationsFomo);\n    // }\n  }\n\n  componentWillUnmount() {\n    this.stopRecursion = true;\n  }\n\n  private async recursionUpdateTokenPrice() {\n    if (this.stopRecursion) {\n      return;\n    }\n\n    await updateTokenPrice();\n    await new Promise((r) => setTimeout(r, CHUNK_DATA_DELAY));\n    await this.recursionUpdateTokenPrice();\n  }\n\n  private onChangeFilter(filterText: string) {\n    this.setState({ filterText });\n  }\n\n  private filterTokens(tokens: ITokenTable[]): ITokenTable[] {\n    const { filterText } = this.state;\n\n    if (!filterText) {\n      const topMoverTokens: ITokenTable[] = sortTopMoverTokens(tokens);\n\n      return topMoverTokens;\n    }\n\n    const filteredTokens: ITokenTable[] = tokens.filter(\n      (token: ITokenTable): boolean => {\n        return (\n          token.coinTitle.toLowerCase().includes(filterText.toLowerCase()) ||\n          token.address.toLowerCase() === filterText.toLowerCase()\n        );\n      }\n    );\n\n    return filteredTokens;\n  }\n\n  render(): ReactElement {\n    const { filterText } = this.state;\n    return (\n      <Container fluid='xl' className='py-2 py-lg-3 py-xl-5'>\n        <Row>\n          <Col\n            xl={{\n              offset: 1,\n              size: 10,\n            }}\n          >\n            <div className='fk-container px-2 px-lg-4 px-xl-5 pt-2 pt-lg-4 pt-xl-5 pb-xl-4'>\n              <div className='mb-1'>\n                <InputText\n                  className={'fk-input-lg ' + style.filterInput}\n                  isShowClear={true}\n                  placeholder={'Enter token name / address...'}\n                  value={filterText}\n                  onChange={this.onChangeFilter}\n                />\n              </div>\n              <DataTable\n                columns={this.columnConfigs}\n                data={this.filterTokens(this.props.tokens)}\n                pagination\n                responsive\n                theme={'dark'}\n                customStyles={{\n                  rows: {\n                    style: {\n                      minHeight: '52px',\n                    },\n                  },\n                  headCells: {\n                    style: {\n                      fontSize: '16px',\n                      fontWeight: '700',\n                    },\n                  },\n                  cells: {\n                    style: {\n                      fontSize: '14px',\n                      fontWeight: '500',\n                    },\n                  },\n                  pagination: {\n                    style: {\n                      fontSize: '14px',\n                      fontWeight: '500',\n                    },\n                  },\n                }}\n              />\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nconst mapState = (state: TStoreState): IStoreProps => ({\n  tokens: mappingTokenTable(state.tokens),\n  tokenNotifications: mappingVariationBrowserNotification(state.tokens),\n  // tokenNotificationsFomo: mappingVariationBrowserNotificationFomo(state.tokens),\n});\n\nexport default connect(mapState)(TokenTable);\n"],"sourceRoot":""}